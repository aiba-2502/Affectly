version: '3.9'

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: kokoro_log_development
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: kokoro_log_development
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: bash -c "cd backend && bundle install && bundle exec rails server -b 0.0.0.0"
    volumes:
      - .:/app
      - bundle_data:/usr/local/bundle
      - node_modules:/app/backend/node_modules
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_HOST: db
      DATABASE_USER: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: kokoro_log_development
      MONGODB_URI: mongodb://root:password@mongodb:27017/kokoro_log_development?authSource=admin
      REDIS_URL: redis://redis:6379/0
      RAILS_ENV: development
    stdin_open: true
    tty: true

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    command: sh -c "cd frontend && npm install && npm run dev"
    volumes:
      - ./frontend:/app/frontend
      - frontend_node_modules:/app/frontend/node_modules
      - frontend_next:/app/frontend/.next
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  bundle_data:
  node_modules:
  frontend_node_modules:
  frontend_next: